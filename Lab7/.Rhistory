cast = ""mother cooks""
install.packages("devtools")
library(devtools)
install_github("slidify","ramnathv")
install_github("slidifyLibraries","ramnathv")
install.packages("rmarkdown")
install.packages("knitr")
library(ggplot2)
data(diamonds)
??ggplot2
?ggplot2
data()
data(package="ggplot2")
data(presidential)
head(presidential)
data(seals)
head(seals)
data(txhousing)
head(txhousing)
data(package="MASS")
data(package="ggplot2")
data("economics")
head(economics)
data(midwest)
head(midwest)
x=rnorm(1000)
y=rnorm(1000)
qplot(x)
qplot(x,y)
ggplot(aes(x=x,y=y))
ggplot(data = data.frame(x=x,y=y),aes(x=x,y=y))
ggplot(data = data.frame(x1=x,y1=y),aes(x=x1,y=y1))
f1=data.frame(x1=x,y1=y)
head(f1)
ggplot(data = data.frame(x=x,y=y),aes(x=x,y=y)) + geom_point()
data(WorldPhones)
head(WorldPhones)
WorldPhones.m = melt(WorldPhones)
library(reshape2)
WorldPhones.m = melt(WorldPhones)
View(WorldPhones.m)
View(WorldPhones.m)
WorldPhones.m = melt(WorldPhones)
View(WorldPhones.m)
View(WorldPhones)
head(WorldPhones)
View(WorldPhones)
library(waffle)
?waffle
parts <- c(80, 30, 20, 10)
chart <- waffle(parts, rows=8)
chart
library(ggplot2)
library(dplyr)
ggplot(data = diamonds) + geom_bar(mapping = (aes = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
ggplot(data = diamonds, aes(x=cut)) + geom_histogram()
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
data(diamonds)
glimps(diamonds)
glimpse(diamonds)
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
ggplot(data = diamonds, aes(x=cut))
ggplot(data = diamonds, aes(x=cut))
?aes
rm(aes)
ggplot(data = diamonds, aes(x=cut))
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
diamonds %>% count(cut)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x=carat), binwidth=.5
ggplot(data = diamonds) + geom_histogram(mapping = aes(x=carat), binwidth=.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x=carat), binwidth=.5)
diamonds %>% count(cut_width(carat, .5))
smaller <-diamonds %>% filter(carat<3)
ggplot(data=smaller, mapping=aes(x=carat)) + geom_histogram(binwidth=.1)
ggplot(data=smaller, mapping=aes(x=carat,color=cut)) + geom_freqpoly(binwidth=.1)
ggplot(diamonds) + geom_histogram(mapping = aes(x=y), binwidth = 0.5)
ggplot(diamonds) + geom_histogram(mapping = aes(x=y), binwidth = 0.5) + coord_cartesian(ylim = c(0,50))
unusual <- diamonds %>% filter(y<3 | y>20) %>% arrange(y)
unusual
str(diamonds)
?ordered
library(rmarkdown)
install.packages("Lahman")
library(Lahman)
data(package=Lahman)
data(package="Lahman")
data(Pitching)
View(Pitching)
WBB  <- Pitching %>% filter(W>BB)
library(dplyr)
WBB  <- Pitching %>% filter(W>BB, GS>=20)
WBB
View(WBB)
data(package="Lahman")
View(Lahman::LahmanData)
View(Lahman::Master)
NA*0
rm(all)
?rm
rm(smaller)
rm(diamonds)
rm(unusual)
library(Lahman)
library(Lahman)
library(ggplot2)
library(dplyr)
data(Batting)
# bye Babe Ruth
bat.pos <- Batting %>%
filter(AB>0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(AB = sum(AB),
H = sum(H)) %>%
mutate(AVG = H/AB)
# baseball avg
avg.all <- bat.pos %>%
summarize(AB = sum(AB),
H = sum(H)) %>%
mutate(AVG = H/AB)
# Add names
bat.pos2 <- Master %>%
select(nameFirst, nameLast, playerID) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(bat.pos, by = "playerID") %>%
select(-playerID) %>%
tbl_df()
arrange(bat.pos2, AVG)
arrange(bat.pos2, desc(AVG))
career.filtered <- bat.pos2 %>%
filter(AB > 500)
fit.beta <- MASS::fitdistr(career.filtered$AVG, dbeta,
start = list(shape1 = 70, shape2 = 200))
alpha0 <- fit.beta$estimate[1]
beta0 <- fit.beta$estimate[2]
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
library(tidyr)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
career %>%
filter(AB >= 500) %>%
ggplot(aes(average)) +
geom_histogram(binwidth = .005)
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 80, shape2 = 200))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 50, shape2 = 100))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
beta0
ggplot(career_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
install.packages("vembedr")
library(shiny)
library(rmarkdown)
library(rmarkdown)
install.packages(c("car", "colorspace", "curl", "DBI", "evaluate", "lme4", "lubridate", "mnormt", "nlme", "openssl", "plotly", "plyr", "quantreg", "R6", "Rcpp", "RcppEigen", "reshape", "reshape2", "rmarkdown", "shiny", "sourcetools", "SparseM", "stringi", "tibble", "waffle"))
library(dplyr)
install.packages("installr"); library(installr)
updateR()
library(dplyr)
pkgs <- ("dplyr","broom","ggplot2","plotly","caret","arm","xgboost")
install.packages(pkgs)
pkgs <- ("dplyr","broom","ggplot2","plotly","caret","arm","xgboost")
install.packages(pkgs)
pkgs <- c("dplyr","broom","ggplot2","plotly","caret","arm","xgboost")
install.packages(pkgs)
pkgs2 <- c("forecast","stringr","lubridate","reshape2")
install.packages(pkgs2)
library(dplyr)
install.packages("nycflights13")
library("abind", lib.loc="~/R/win-library/3.3")
library("arm", lib.loc="~/R/win-library/3.3")
detach("package:abind", unload=TRUE)
detach("package:arm", unload=TRUE)
install.packages("mlbench")
library(mlbench)
data(package="mlbench")
data("PimaIndiansDiabetes")
View(PimaIndiansDiabetes)
str(PimaIndiansDiabetes)
library(dplyr)
pid <- PimaIndiansDiabetes
glm.fit <- glm(diabetes ~ ., data = pid)
glm.fit <- glm(diabetes ~ ., data = pid, family = binomial)
summary(glm.fit)
summary(glm.fit)
pkgs <- c("knitr","rmarkdown")
install.packages(pkgs)
summary(glm.fit)
pid2 <- data(PimaIndiansDiabetes)
View(pid2)
pid2 <- data(PimaIndiansDiabetes) %>% .
rm(pid2)
library(broom)
glm.fit %>% augment %>% View
?augment
glm.fit %>% augment(type.predict="response") %>% View
glm.fit %>% augment(type.predict="response") %>% View
ggplot(pid, aes(x=.fitted, y=diabetes)) + geom_point()
library(ggplot2)
glm.fit %>% augment(type.predict="response") %>%
ggplot(pid, aes(x=.fitted, y=diabetes)) + geom_point()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=diabetes)) + geom_point()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=diabetes)) + geom_point() + geom_smooth()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=ifelse(diabetes=="pos", 1,0))) + geom_point() + geom_smooth()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
summary(glm.fit)
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=mass, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
?PimaIndiansDiabetes
pid <- PimaIndiansDiabetes %>% filter(mass > 5)
glm.fit <- glm(diabetes ~ ., data = pid, family = binomial)
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=mass, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
pid <- PimaIndiansDiabetes %>% mutate(mass = ifelse(mass<5, NA, mass))
glm.fit <- glm(diabetes ~ ., data = pid, family = binomial)
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=mass, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
ggplot(pid, aes(x=triceps)) + geom_histogram()
ggplot(pid, aes(x=pressure)) + geom_histogram()
pid <- PimaIndiansDiabetes %>%
mutate(mass = ifelse(mass<5, NA, mass),
pressure = ifelse(pressure<5, NA, pressure))
glm.fit <- glm(diabetes ~ ., data = pid, family = binomial)
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=.fitted, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=mass, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
glm.fit %>% augment(type.predict="response") %>% ggplot(aes(x=pressure, y=ifelse(diabetes=="pos", 1,0))) + geom_point(alpha=.3) + geom_smooth()
summary(glm.fit)
install.packages("servr")
?system
system('jekyll')
system('jekyll exit')
servr::jekyll()
setwd("C:/Users/clee/Google 雲端硬碟/Fall2820L/Notes/Lab7")
library(rmarkdown)
render("Lab7.Rmd")
render("Lab7.Rmd")
?PimaIndiansDiabetes
pid <- PimaIndiansDiabetes %>%
mutate(mass = ifelse(mass<5, NA, mass),
pressure = ifelse(pressure<5, NA, pressure))
glm.fit2 <- glm(diabetes ~ pedigree, data = pid, family = binomial)
sumamry(glm.fit2)
summary(glm.fit2)
fit2.prob <- predict(glm.fit2, type="response")
str(pid$diabetes)
level(pid$diabetes)
nlevel(pid$diabetes)
levels(pid$diabetes)
relevel(pid$diabetes, ref = "pos") %>% levels
pid$diabetes2  <- relevel(pid$diabetes, ref = "pos")
glm.fit2 <- glm(diabetes2 ~ pedigree, data = pid, family = binomial)
summary(glm.fit2)
fit2.prob <- predict(glm.fit2, type="response")
fit2.pred <- ifelse(fit2.prob > .5, "pos", "neg")
new.pid <- pid %>% select(diabetes2) %>% mutate(pred = fit2.pred)
View(new.pid)
table(new.pid$diabetes2, fit2.pred)
table(fit2.pred,new.pid$diabetes2)
table(fit2.pred,new.diabetes2)
table(fit2.pred,diabetes2)
table(fit2.pred,pid$diabetes)
fit2.pred <- ifelse(fit2.prob > .8, "pos", "neg")
table(fit2.pred,pid$diabetes)
fit2.pred <- ifelse(fit2.prob > .7, "pos", "neg")
table(fit2.pred,pid$diabetes)
glm.fit <- glm(diabetes ~ ., data = pid, family = binomial)
summary(glm.fit)
pid <- PimaIndiansDiabetes %>%
mutate(mass = ifelse(mass<5, NA, mass),
pressure = ifelse(pressure<5, NA, pressure))
glm.fit <- glm(diabetes ~ ., data = pid, family = binomial)
summary(glm.fit)
glm.fit <- glm(diabetes ~ glucose, data = pid, family = binomial)
summary(glm.fit)
glm.fit <- glm(diabetes ~ glucose, data = pid, family = binomial)
summary(glm.fit)
glucose.prob <- predict(glm.fit, type = "response")
contrast(pid$diabetes)
contrasts(pid$diabetes)
glucose.pred <- ifelse(glucose.prob > .5, "pos", "neg")
table(glucose.pred, pid$diabetes)
render("Lab7.Rmd")
table(glucose.pred, pid %>% select(diabetes))
table(glucose.pred, pid$diabetes)
glucose.pred <- ifelse(glucose.prob > .5, "pred.pos", "pred.neg")
table(glucose.pred, pid$diabetes)
glucose.pred <- ifelse(glucose.prob > .5, "p.pos", "p.neg")
table(glucose.pred, pid$diabetes)
render("Lab7.Rmd")
levels(pid$diabetes)
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_jitter(height = .05) + binomial_smooth()
library(ggplot2)
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_jitter(height = .05) + binomial_smooth()
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_jitter(height = .05) + binomial_smooth()
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_jitter(height = .05)
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_jitter(height = .05) + geom_smooth(method = "glm", method.args = list(family = "binomial"))#+ binomial_smooth()
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_jitter(height = .05, alpha=.2) + geom_smooth(method = "glm", method.args = list(family = "binomial"))#+ binomial_smooth()
install.packages(plotROC)
install.packages("plotROC")
library(plotROC)
pid %>% ggplot(aes(x=glucose, y=as.numeric(diabetes)-1)) + geom_roc()
pid %>% ggplot(aes(y=glucose, x=as.numeric(diabetes)-1)) + geom_roc()
data.frame(
D = as.numeric(pid$diabetes)-1,
M = glucose.prob
) %>% ggplot(aes(x=D, y=M)) + geom_roc()
head(as.numeric(pid$diabetes)-1)
data.frame(
D = as.numeric(pid$diabetes)-1,
M = glucose.prob
) %>% View
data.frame(
D = as.numeric(pid$diabetes)-1,
M = glucose.prob
) %>% ggplot(aes(d=D, m=M)) + geom_roc()
) %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1)
data.frame(
D = as.numeric(pid$diabetes)-1,
M = glucose.prob
) %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1)
ROC.data %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1, alpha=.5)
ROC.data <- data.frame(
D = as.numeric(pid$diabetes)-1,
M = glucose.prob
)
# making ROC plot
ROC.data %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1, alpha=.2)
ROC.data %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1, alpha=.5)
ROC.data %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1, alpha=.3)
ROC.data %>% ggplot(aes(d=D, m=M)) + geom_roc() + geom_abline(slope=1, alpha=.4)
pid <- PimaIndiansDiabetes
glm.fit <- glm(diabetes ~ glucose, data = pid, family = binomial)
summary(glm.fit)
glucose.prob <- predict(glm.fit, type = "response")
contrasts(pid$diabetes) # show dummy variable
glucose.pred <- ifelse(glucose.prob > .5, "p.pos", "p.neg")
table(glucose.pred, pid$diabetes)
* true negative rate = 840/(60+840) = `r 100*840/900`\%.
str(table(glucose.pred, pid$diabetes))
