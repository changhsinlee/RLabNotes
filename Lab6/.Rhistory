cast = ""mother cooks""
install.packages("devtools")
library(devtools)
install_github("slidify","ramnathv")
install_github("slidifyLibraries","ramnathv")
install.packages("rmarkdown")
install.packages("knitr")
library(ggplot2)
data(diamonds)
??ggplot2
?ggplot2
data()
data(package="ggplot2")
data(presidential)
head(presidential)
data(seals)
head(seals)
data(txhousing)
head(txhousing)
data(package="MASS")
data(package="ggplot2")
data("economics")
head(economics)
data(midwest)
head(midwest)
x=rnorm(1000)
y=rnorm(1000)
qplot(x)
qplot(x,y)
ggplot(aes(x=x,y=y))
ggplot(data = data.frame(x=x,y=y),aes(x=x,y=y))
ggplot(data = data.frame(x1=x,y1=y),aes(x=x1,y=y1))
f1=data.frame(x1=x,y1=y)
head(f1)
ggplot(data = data.frame(x=x,y=y),aes(x=x,y=y)) + geom_point()
data(WorldPhones)
head(WorldPhones)
WorldPhones.m = melt(WorldPhones)
library(reshape2)
WorldPhones.m = melt(WorldPhones)
View(WorldPhones.m)
View(WorldPhones.m)
WorldPhones.m = melt(WorldPhones)
View(WorldPhones.m)
View(WorldPhones)
head(WorldPhones)
View(WorldPhones)
library(waffle)
?waffle
parts <- c(80, 30, 20, 10)
chart <- waffle(parts, rows=8)
chart
library(ggplot2)
library(dplyr)
ggplot(data = diamonds) + geom_bar(mapping = (aes = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
ggplot(data = diamonds, aes(x=cut)) + geom_histogram()
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
data(diamonds)
glimps(diamonds)
glimpse(diamonds)
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
ggplot(data = diamonds, aes(x=cut))
ggplot(data = diamonds, aes(x=cut))
?aes
rm(aes)
ggplot(data = diamonds, aes(x=cut))
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
ggplot(data = diamonds, aes(x=cut)) + geom_bar()
diamonds %>% count(cut)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x=carat), binwidth=.5
ggplot(data = diamonds) + geom_histogram(mapping = aes(x=carat), binwidth=.5)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x=carat), binwidth=.5)
diamonds %>% count(cut_width(carat, .5))
smaller <-diamonds %>% filter(carat<3)
ggplot(data=smaller, mapping=aes(x=carat)) + geom_histogram(binwidth=.1)
ggplot(data=smaller, mapping=aes(x=carat,color=cut)) + geom_freqpoly(binwidth=.1)
ggplot(diamonds) + geom_histogram(mapping = aes(x=y), binwidth = 0.5)
ggplot(diamonds) + geom_histogram(mapping = aes(x=y), binwidth = 0.5) + coord_cartesian(ylim = c(0,50))
unusual <- diamonds %>% filter(y<3 | y>20) %>% arrange(y)
unusual
str(diamonds)
?ordered
library(rmarkdown)
install.packages("Lahman")
library(Lahman)
data(package=Lahman)
data(package="Lahman")
data(Pitching)
View(Pitching)
WBB  <- Pitching %>% filter(W>BB)
library(dplyr)
WBB  <- Pitching %>% filter(W>BB, GS>=20)
WBB
View(WBB)
data(package="Lahman")
View(Lahman::LahmanData)
View(Lahman::Master)
NA*0
rm(all)
?rm
rm(smaller)
rm(diamonds)
rm(unusual)
library(Lahman)
library(Lahman)
library(ggplot2)
library(dplyr)
data(Batting)
# bye Babe Ruth
bat.pos <- Batting %>%
filter(AB>0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(AB = sum(AB),
H = sum(H)) %>%
mutate(AVG = H/AB)
# baseball avg
avg.all <- bat.pos %>%
summarize(AB = sum(AB),
H = sum(H)) %>%
mutate(AVG = H/AB)
# Add names
bat.pos2 <- Master %>%
select(nameFirst, nameLast, playerID) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(bat.pos, by = "playerID") %>%
select(-playerID) %>%
tbl_df()
arrange(bat.pos2, AVG)
arrange(bat.pos2, desc(AVG))
career.filtered <- bat.pos2 %>%
filter(AB > 500)
fit.beta <- MASS::fitdistr(career.filtered$AVG, dbeta,
start = list(shape1 = 70, shape2 = 200))
alpha0 <- fit.beta$estimate[1]
beta0 <- fit.beta$estimate[2]
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
library(tidyr)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
career %>%
filter(AB >= 500) %>%
ggplot(aes(average)) +
geom_histogram(binwidth = .005)
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 80, shape2 = 200))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 50, shape2 = 100))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
beta0
ggplot(career_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
install.packages("vembedr")
library(shiny)
library(rmarkdown)
library(rmarkdown)
setwd("C:/Users/clee/Google 雲端硬碟/Fall2820L/Notes/Lab6")
library(rmarkdown)
render("Lab6.Rmd")
render("Lab6.Rmd")
summary(lm.fit.interaction2)
render("Lab6.Rmd")
fit.all  <- lm(medv~., data = Boston)
summary(fit.all)
fit.all  <- lm(medv~., data = (Boston %>% mutate(rad = factor(rad), chas = factor(chas))))
summary(fit.all)
render("Lab6.Rmd")
render("Lab6.Rmd")
render("Lab6.Rmd")
v1 = 1:100
v1
v2 = "var"
v2
v1 = as.character(1:100)
str(v1)
paste(v2,v1)
paste(v2,v1, sep="")
data.frame(replicate(3,sample(0:1,1000,rep=TRUE)))
data.frame(replicate(3,sample(0:1,6,rep=TRUE)))
sample(0:1,6,rep=TRUE)
sample(0:1,6,rep=TRUE)
runif(,6)
runif(6)
runif(6, rep=TRUE)
?runif
data.frame(replicate(3,runif(5))
_
data.frame(replicate(3,runif(5)))
set.seed(3)
data.frame(replicate(3,runif(5)))
data.frame(replicate(3,runif(5)))
set.seed(3)
data.frame(replicate(3,runif(5)))
random.data <- data.frame(replicate(100,runif(100)))
View(random.data)
ggplot(random.data, aes(x=X1,Y=X2)) + geom_point()
ggplot(random.data, aes(x=X1,y=X2)) + geom_point()
random.data$medv <- Boston$medv[1:100]
View(random.data)
dim(random.data)
View(random.data)
random.data$medv
View(random.data)
str(random.data)
View(random.data)
random.data2  <- random.data %>% tbl_df()
View(random.data2)
random.data <- data.frame(replicate(10,runif(100)))
random.data$medv <- Boston$medv[1:100]
View(random.data)
random.data <- data.frame(replicate(100,runif(100)))
random.data$medv <- Boston$medv[1:100]
View(random.data)
lm.random  <- lm(medv ~ ., data=random.data)
library(broom)
lm.rand.tidy  <- lm.random %>% tidy
View(lm.rand.tidy)
summary(lm.random)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
View(lm.rand.tidy)
lm.rand.tidy %>% filter(p.value < .05)
random.data <- data.frame(replicate(100,runif(200)))
set.seed(2820)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
set.seed(2820)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
set.seed(4321)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
set.seed(31415926)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
set.seed(2820)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
lm.random2  <- lm(medv ~ X11 + X23, data=random.data)
summary(lm.random2)
set.seed(1104)
random.data <- data.frame(replicate(100,runif(200)))
random.data$medv <- Boston$medv[1:200]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
lm(medv ~ X40 + X68 + X80 + X90, data=random.data) %>% summary
dim(Boston)
set.seed(1104)
random.data <- data.frame(replicate(100,runif(500)))
random.data$medv <- Boston$medv[1:500]
lm.random  <- lm(medv ~ ., data=random.data)
lm.rand.tidy  <- lm.random %>% tidy
lm.rand.tidy %>% filter(p.value < .05)
summary(lm.random)
color="blue")
fit2.est <- tidy(lm.fit2) %>% dplyr::select(estimate)
ggplot(Boston2, aes(x=lstat, y=medv, color=chas)) +geom_point(alpha=.3) +
geom_abline(intercept = fit2.est[1,],
slope = fit2.est[2,],
color="red") +
geom_abline(intercept = fit2.est[1,] + fit2.est[3,],
slope = fit2.est[2,],
color="blue")
View(augment(lm.fit2))
Boston2.p <- bind_cols(Boston2, lm.fit2 %>% augment %>% select(.fitted))
names(Boston2.p)
str(Boston2$chas)
ggplot(Boston2, aes(x=lstat, y=medv, color=chas)) + geom_point(alpha=.3) + geom_smooth(aes(y=.fitted), method="lm")
Boston2.p <- bind_cols(Boston2, lm.fit2 %>% augment %>% select(.fitted))
ggplot(Boston2, aes(x=lstat, y=medv, color=chas)) + geom_point(alpha=.3) + geom_smooth(aes(y=.fitted), method="lm")
Boston2.p <- bind_cols(Boston2, lm.fit2 %>% augment %>% select(.fitted))
ggplot(Boston2.p, aes(x=lstat, y=medv, color=chas)) + geom_point(alpha=.3) + geom_smooth(aes(y=.fitted), method="lm")
ggplot(Boston2.p, aes(x=lstat, y=medv, color=chas)) + geom_point(alpha=.3) + geom_smooth(aes(y=.fitted), method="lm", fullrange=TRUE)
setwd("C:/Users/clee/Google 雲端硬碟/Fall2820L/Notes/Lab6")
render(Lab6.Rmd)
render("Lab6.Rmd")
render("Lab6.Rmd")
render("Lab6.Rmd")
render("Lab6.Rmd")
render("Lab6.Rmd")
render("Lab6.Rmd")
